"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[772],{9304:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var a=n(7624),o=n(2172);const s={slug:"adding-new-packages",title:"Adding new packages to nx",description:"How to add new package to nx package based repo",authors:["abhi"],tags:["nx","package-based"]},r=void 0,c={permalink:"/advent-of-code-docs/blog/adding-new-packages",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-02-13-adding-new-packages.mdx",source:"@site/blog/2024-02-13-adding-new-packages.mdx",title:"Adding new packages to nx",description:"How to add new package to nx package based repo",date:"2024-02-13T00:00:00.000Z",formattedDate:"February 13, 2024",tags:[{label:"nx",permalink:"/advent-of-code-docs/blog/tags/nx"},{label:"package-based",permalink:"/advent-of-code-docs/blog/tags/package-based"}],readingTime:.52,hasTruncateMarker:!1,authors:[{name:"Abhishek Gowda",title:"Owner of this source",url:"https://github.com/abhishekgowda28",imageURL:"https://gitlab.com/uploads/-/system/user/avatar/8594191/avatar.png",key:"abhi"}],frontMatter:{slug:"adding-new-packages",title:"Adding new packages to nx",description:"How to add new package to nx package based repo",authors:["abhi"],tags:["nx","package-based"]},unlisted:!1,prevItem:{title:"A new setup",permalink:"/advent-of-code-docs/blog/setting-up-new-dev-env"},nextItem:{title:"Repository setup",permalink:"/advent-of-code-docs/blog/repo-setup"}},d={authorsImageUrls:[void 0]},i=[{value:"Background",id:"background",level:2},{value:"Prerequsite",id:"prerequsite",level:2},{value:"Setup",id:"setup",level:2},{value:"References",id:"references",level:2}];function p(e){const t={a:"a",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"background",children:"Background"}),"\n",(0,a.jsx)(t.p,{children:"I wanted a different packages to work on different things. I don't want to have a single package that would contain everything. I wanted flexibility on creating and testing code. So went to nx package based approach."}),"\n",(0,a.jsx)(t.h2,{id:"prerequsite",children:"Prerequsite"}),"\n",(0,a.jsx)(t.p,{children:"I used nx VS code extension to create/generate the package. This made it easier to create the package."}),"\n",(0,a.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,a.jsx)(t.p,{children:"We just need to follow along the setup steps and the package would be created at the end of the steps."}),"\n",(0,a.jsxs)(t.p,{children:["nx follows it's own project configuration - ",(0,a.jsx)(t.a,{href:"https://nx.dev/reference/project-configuration",children:"https://nx.dev/reference/project-configuration"})]}),"\n",(0,a.jsx)(t.p,{children:"For more information the above \ud83d\udc46 link can be followed."}),"\n",(0,a.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://nx.dev/reference/project-configuration",children:"https://nx.dev/reference/project-configuration"})}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,o.M)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},2172:(e,t,n)=>{n.d(t,{I:()=>c,M:()=>r});var a=n(1504);const o={},s=a.createContext(o);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);